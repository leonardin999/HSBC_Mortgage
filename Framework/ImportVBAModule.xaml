<Activity mc:Ignorable="sap sap2010" x:Class="ImportVBAModule" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:rac="clr-namespace:RCA.Activities.Core;assembly=RCA.Activities.Core" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="activeFileName" Type="InArgument(x:String)" />
    <x:Property Name="vbModulePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>376,1067.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ImportVBAModule_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>RCA.Activities.Core</AssemblyReference>
      <AssemblyReference>RCA.Activities.Windows</AssemblyReference>
      <AssemblyReference>RCA.Activities.Excel</AssemblyReference>
      <AssemblyReference>RCA.Activities.Java</AssemblyReference>
      <AssemblyReference>RCA.Activities.Word</AssemblyReference>
      <AssemblyReference>RCA.Activities.Browser</AssemblyReference>
      <AssemblyReference>RCA.Activities.IE</AssemblyReference>
      <AssemblyReference>RCA.Activities.Catia</AssemblyReference>
      <AssemblyReference>RCA.Activities.Mail</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>RCA.Activities.SAP</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>RCA.Activities.ActiveDirectory</AssemblyReference>
      <AssemblyReference>RCA.Activities.GSuite</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ImportVBAModule" sap:VirtualizedContainerService.HintSize="336,987.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strScriptContent" />
      <Variable x:TypeArguments="x:String" Name="strRootPath" />
      <Variable x:TypeArguments="x:String" Name="strResult" />
      <Variable x:TypeArguments="x:String" Name="strAgumentPass" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="[289493910] Assign" sap:VirtualizedContainerService.HintSize="313.6,60.8" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strRootPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Environment.CurrentDirectory+"\"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName=" Assign" sap:VirtualizedContainerService.HintSize="313.6,64" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strScriptContent]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">["Set Arg = WScript.Arguments"+System.Environment.NewLine  + _
"Dim fileName,modulePath"+System.Environment.NewLine  + _
"If Arg.length &gt; 0 Then"+System.Environment.NewLine  + _
"fileName = Replace(Arg(0),""&amp;nbsp;"","" "")"+System.Environment.NewLine  + _
"modulePath = Replace(Arg(1),""&amp;nbsp;"","" "")"+System.Environment.NewLine  + _
"Else"+System.Environment.NewLine  + _
"fileName = """""+System.Environment.NewLine  + _
"modulePath = """""+System.Environment.NewLine  + _
"End If"+System.Environment.NewLine  + _
"Set excelApp = getObject(,""Excel.Application"")"+System.Environment.NewLine  + _
"For each item in excelApp.Workbooks	"+System.Environment.NewLine  + _
"If fileName&lt;&gt;"""" And InStr(item.name,fileName) Then"+System.Environment.NewLine  + _
"item.Activate"+System.Environment.NewLine  + _
"End If"+System.Environment.NewLine  + _
"Next"+System.Environment.NewLine  + _
"For each item in excelApp.VBE.ActiveVBProject.VBComponents"+System.Environment.NewLine  + _
"If item.Name = ""FPTMarcoModule"" Then"+System.Environment.NewLine  + _
"excelApp.VBE.ActiveVBProject.VBComponents.Remove(item)"+System.Environment.NewLine  + _
"End If	"+System.Environment.NewLine  + _
"Next"+System.Environment.NewLine  + _
"excelApp.VBE.ActiveVBProject.VBComponents.Import modulePath"]</InArgument>
      </Assign.Value>
    </Assign>
    <rac:CreateDirectory ContinueOnError="True" DisplayName="Create Directory" sap:VirtualizedContainerService.HintSize="313.6,22.4" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[strRootPath+&quot;Data\Temp\&quot;]" />
    <rac:WriteTextFile DisplayName="Write script to file" FileName="[strRootPath+&quot;Data\Temp\vbscript.vbs&quot;]" sap:VirtualizedContainerService.HintSize="313.6,88" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[strScriptContent]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </rac:WriteTextFile>
    <Assign DisplayName="[597582277] Assign" sap:VirtualizedContainerService.HintSize="313.6,60.8" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[activeFileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[activeFileName.Replace(" ","&amp;nbsp;")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="[597582277] Assign" sap:VirtualizedContainerService.HintSize="313.6,60.8" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[vbModulePath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[vbModulePath.Replace(" ","&amp;nbsp;").Replace("/","\")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="[270792337] Assign" sap:VirtualizedContainerService.HintSize="313.6,60.8" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strAgumentPass]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["%comspec% /C cscript.exe """+strRootPath+"Data\Temp\vbscript.vbs"""+" """+activeFileName+""" """+vbModulePath+""""]</InArgument>
      </Assign.Value>
    </Assign>
    <rac:InvokeCode ContinueOnError="{x:Null}" Code="Dim foo As New System.Diagnostics.Process  &#xA;&#xA;foo.StartInfo.RedirectStandardOutput = True   &#xA;foo.StartInfo.FileName = &quot;cmd.exe&quot;   &#xA;foo.StartInfo.Arguments = strAgumentPass&#xA;foo.StartInfo.UseShellExecute = False   &#xA;foo.StartInfo.CreateNoWindow = True  &#xA;foo.Start()   &#xA;strResult = foo.StandardOutput.ReadToEnd()&#xA;foo.WaitForExit()   &#xA;foo.Dispose() " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="313.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <rac:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="strAgumentPass">[strAgumentPass]</InArgument>
      </rac:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </rac:InvokeCode>
  </Sequence>
</Activity>